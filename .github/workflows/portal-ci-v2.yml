name: One Portal CI

on:
    workflow_call:
      inputs:
        image:
            type: string
            description: 'Image name'
            required: true
            default: 'unspecified'
        dockerfile:
            type: string
            description: 'Dockerfile path'
            required: false
            default: 'Dockerfile'

jobs:
  setenv:
    runs-on: cluster0-github-runner
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ $GITHUB_REF_NAME =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
              echo ::set-output name=match::true;
          else
              exit 1;
          fi
      - name: Check ENV
        id: getenv
        run: |
          eval $(curl github-secret.github-action-secret.svc:8080/secret);
          echo "::set-output name=harbor_registry::$HARBOR_REGISTRY"
          echo "::set-output name=harbor_user::$HARBOR_USER"
          echo "::set-output name=harbor_pass::$HARBOR_PASS"
          echo "::set-output name=tag_name::${GITHUB_REF_NAME:1}"
    outputs:
      harbor_registry: ${{ steps.getenv.outputs.harbor_registry }}
      harbor_user: ${{ steps.getenv.outputs.harbor_user }}
      harbor_pass: ${{ steps.getenv.outputs.harbor_pass }}
      tag_name: ${{ steps.getenv.outputs.tag_name }}

  container-test-job:
    runs-on: cluster0-github-runner
    needs: setenv
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: docker 
        run: |
          mkdir -p /home/runner/.docker
          pwd
          ls -l
          echo -e '{"auths":{"${{needs.setenv.outputs.harbor_registry}}":{"username":"${{needs.setenv.outputs.harbor_user}}","password":"${{needs.setenv.outputs.harbor_pass}}"}}}' > /home/runner/.docker/config.json
          docker build --tag "${{needs.setenv.outputs.harbor_registry}}/portal/${{inputs.image}}:${{needs.setenv.outputs.tag_name}}" --file ${{inputs.dockerfile}} .
          docker push "${{needs.setenv.outputs.harbor_registry}}/portal/${{inputs.image}}:${{needs.setenv.outputs.tag_name}}"