name: CI

on:
  workflow_call:
    inputs:
      image:
          type: string
          description: 'Image name'
          required: true
          default: 'unspecified'
      dockerfile:
          type: string
          description: 'Dockerfile path'
          required: false
          default: 'Dockerfile'
          
jobs:
  setenv:
    runs-on: cluster0-nxcp-runner
    steps:
      - name: Check ENV
        id: getenv
        run: |
          eval $(curl github-secret.github-action-secret.svc:8080/secret);
          echo "::set-output name=harbor_registry::$HARBOR_REGISTRY"
          echo "::set-output name=harbor_user::$HARBOR_USER"
          echo "::set-output name=harbor_pass::$HARBOR_PASS"
          echo "::set-output name=tag_name::${GITHUB_SHA::8}"
          echo "::set-output name=version::${GITHUB_SHA}"
      - uses: actions/checkout@v3
    outputs:
      harbor_registry: ${{ steps.getenv.outputs.harbor_registry }}
      harbor_user: ${{ steps.getenv.outputs.harbor_user }}
      harbor_pass: ${{ steps.getenv.outputs.harbor_pass }}
      tag_name: ${{ steps.getenv.outputs.tag_name }}
  build-container:
    runs-on: cluster0-nxcp-runner
    container: gcr.io/kaniko-project/executor:v1.9.0-debug
    needs: setenv
    steps:
      - name: kaniko
        run: |
            mkdir -p /kaniko/.docker
            pwd
            ls -l
            # Add dev auth
            echo -e '{"auths":{"${{needs.setenv.outputs.harbor_registry}}":{"username":"${{needs.setenv.outputs.harbor_user}}","password":"${{needs.setenv.outputs.harbor_pass}}"}}}' > /kaniko/.docker/config.json
            cat /kaniko/.docker/config.json
            /kaniko/executor --context "$(pwd)" --dockerfile "${{inputs.dockerfile}}" --destination "${{needs.setenv.outputs.harbor_registry}}/cluster0/${{inputs.image}}:${{needs.setenv.outputs.tag_name}}"  --build-arg GIT_USER=github-ci-token --build-arg GIT_PASS=${{ secrets.GITHUB_TOKEN }} --build-arg "VERSION=${{needs.setenv.outputs.version}}"