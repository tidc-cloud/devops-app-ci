stages:
  - test
  - build
  - build-images
  - deploy-test
  - deploy-prod
  - rollback

build-push:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[[:digit:]](\.[[:digit:]]){2}(\-[^[:space:]]+|[_].*)?$/ || $CI_COMMIT_REF_SLUG =~ /^test[\/\-].+$/ || $CI_COMMIT_REF_SLUG =~ /^mint[\/\-].+$/
      exists:
      - Dockerfile
  tags:
    - nxcp-sandbox
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    untracked: true
    policy: pull
  script:
    - if [ -z $CI_COMMIT_TAG ]; then export imageTag=${CI_COMMIT_SHA:0:8}; else export imageTag=$CI_COMMIT_TAG; fi;
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context=$CI_PROJECT_DIR --dockerfile=$CI_PROJECT_DIR/Dockerfile --destination=${CI_REGISTRY_IMAGE}:${imageTag} --build-arg GIT_USER=gitlab-ci-token --build-arg GIT_PASS=${CI_JOB_TOKEN}

.kustomize-script: &kustomize-script
  - cd kubernetes
  - export image=${CI_REGISTRY_IMAGE}
  - if [ -z $CI_COMMIT_TAG ]; then export imageTag=\"${CI_COMMIT_SHA:0:8}\"; else export imageTag=$CI_COMMIT_TAG; fi;
  - for f in base/*.yaml ; do echo $f;envsubst <$f > $f-temp && mv $f-temp $f; done; 
  - envsubst <overlay/${env}/kustomization.yaml > overlay/${env}/kustomization_tmp.yaml && mv overlay/${env}/kustomization_tmp.yaml  overlay/${env}/kustomization.yaml
  - kustomize build overlay/${env} ${kustom_option} > output-${env}.yaml;
  - cat output-${env}.yaml;


deploy-test:
  image: zoftdev/kustomize-docker:v-3.5.3.2
  only:
    - /^test[\/\-].+$/
  tags:
    - nxcp-sandbox
  stage: deploy-test
  artifacts:
    when: always
    paths:
    - kubernetes
    expire_in: 1 day
  script:
      - export env=${CI_COMMIT_REF_SLUG:5}
      - *kustomize-script
      - kubectl apply -f output-${env}.yaml -n ${NAMESPACE}-${env};


deploy-existing:
  image: zoftdev/kustomize-docker:v-3.5.3.2
  only:
    - /^mint[\/\-].+$/
  tags:
    - k8s-nxcp
  stage: deploy-test
  artifacts:
    when: always
    paths:
    - kubernetes
    expire_in: 1 day
  script:
      - export env=ex-${CI_COMMIT_REF_SLUG:5}
      - *kustomize-script
      - kubectl apply -f output-${env}.yaml -n ${NAMESPACE}-test;

deploy-prod:
  image: zoftdev/kustomize-docker:v-3.5.3.2
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[[:digit:]](\.[[:digit:]]){2}(\-[^[:space:]]+|[_].*)?$/
  tags:
    - nxcp-sandbox
  stage: deploy-prod
  artifacts:
    when: always
    paths:
    - kubernetes
    expire_in: 1 day
  script: 
    - export env=prod
    - *kustomize-script
    - kubectl apply -f output-${env}.yaml -n $NAMESPACE;

rollback:
  only: 
  - $CI_COMMIT_TAG =~ /^v[[:digit:]](\.[[:digit:]]){2}(\-[^[:space:]]+|[_].*)?$/
  when: manual
  # needs: ["‚ù§ apply-rollout"]
  #  image: reghbpr01.dc1.true.th/tools/kustomize-docker:v-3.5.3.2
  image: reghbpr01.dc1.true.th/tools/kustomize-docker:v-4.0.5
  tags:
    - nxcp-sandbox
  stage: rollback
  script: 
    # - export KUBECONFIG=$(env | grep PROD_KUBECONFIG | awk -F '=' '{print $2}')
    - cd kubernetes
    - export env=prod
    - |
      doc_count=$(yq -d'*' r output-${env}.yaml "kind" | wc -l);
      count=0;
      while [ $count -le $(($doc_count -1)) ]; do
        kind=$(yq -d"$count" r output-${env}.yaml "kind");
        if [ $kind == "Deployment" ]; then
          rs_name=$(yq -d"$count" r output-${env}.yaml metadata.name);
          kubectl rollout undo deploy/${rs_name};
        elif [ $kind == "StatefulSet" ]; then
          rs_name=$(yq -d"$count" r output-${env}.yaml metadata.name);
          kubectl rollout undo sts/${rs_name};
        fi;
        count=$(( $count + 1 ));
      done;