stages:
  - test
  - build
  - build-images
  # - deploy-test
  # - deploy-prod
  # - rollback

variables:
  image: ${HARBOR_REGISTRY}/cluster0/${CI_PROJECT_NAME}

build-push:
  stage: build
  rules:
    #example : v1.0.0-a.2  # not support (+)
    # allow v1.0.0 , v1.0.0-a.2
    # v is optional
    - if: $CI_COMMIT_TAG =~ /^v?([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?$/
      exists:
      - Dockerfile    
  tags:
    - nxcp-sandbox
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    untracked: true
    policy: pull
  script:
    #tag=> set to 1.1.1-commit_id or  1.1.1-something.commit-id
    - env
    - sep="-"
     #check if have prerelrease version.
    - if echo $CI_COMMIT_TAG |grep -q "-"; then  export imageTag=$(echo $CI_COMMIT_TAG | sed -E 's/^v//').${CI_COMMIT_SHA:0:8} ;else  export imageTag=$(echo $CI_COMMIT_TAG | sed -E 's/^v//')  ;fi
    - echo "{\"auths\":{\"$HARBOR_REGISTRY\":{\"username\":\"$HARBOR_USER\",\"password\":\"$HARBOR_PASS\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context=$CI_PROJECT_DIR --dockerfile=$CI_PROJECT_DIR/Dockerfile --destination=${image}:${imageTag} --build-arg GIT_USER=gitlab-ci-token --build-arg GIT_PASS=${CI_JOB_TOKEN}

# .kustomize-script: &kustomize-script
#   - cd kubernetes
#   # - export image=${CI_REGISTRY_IMAGE}
#   # - if [ -z $CI_COMMIT_TAG ]; then export imageTag=\"${CI_COMMIT_SHA:0:8}\"; else export imageTag=$CI_COMMIT_TAG; fi;
#   - for f in base/*.yaml ; do echo $f;envsubst <$f > $f-temp && mv $f-temp $f; done; 
#   - envsubst <overlay/${env}/kustomization.yaml > overlay/${env}/kustomization_tmp.yaml && mv overlay/${env}/kustomization_tmp.yaml  overlay/${env}/kustomization.yaml
#   - kustomize build overlay/${env} ${kustom_option} > output-${env}.yaml;
#   - cat output-${env}.yaml;


# deploy-test:
#   image: zoftdev/kustomize-docker:v-3.5.3.2
#   rules:
#     - if: $CI_COMMIT_REF_SLUG =~ /^test[\/\-].+$/
#   tags:
#     - nxcp-sandbox
#   stage: deploy-test
#   artifacts:
#     when: always
#     paths:
#     - kubernetes
#     expire_in: 1 day
#   before_script:
#    - export imageTag=\"${CI_COMMIT_SHA:0:8}\";
#   script:
#     - export env=${CI_COMMIT_REF_SLUG:5}
#     - *kustomize-script
#     - kubectl apply -f output-${env}.yaml -n ${NAMESPACE}-${env};

# deploy-prod:
#   image: zoftdev/kustomize-docker:v-3.5.3.2
#   when: manual
#   rules:
#     - if: $CI_COMMIT_TAG =~ /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
#   tags:
#     - k8s-tks
#   stage: deploy-prod
#   artifacts:
#     when: always
#     paths:
#     - kubernetes
#     expire_in: 1 day
#   before_script:
#     - export imageTag=$(echo $CI_COMMIT_TAG | sed -E 's/^v//' | sed -E 's/[\-]?_.*//')
#   script: 
#     - export env=prod
#     - *kustomize-script
#     - kubectl apply -f output-${env}.yaml -n $NAMESPACE;

# rollback:
#   only: 
#   - $CI_COMMIT_TAG =~ /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
#   when: manual
#   image: reghbpr01.dc1.true.th/tools/kustomize-docker:v-4.0.5
#   tags:
#     - nxcp-sandbox
#   stage: rollback
#   script: 
#     - cd kubernetes
#     - export env=prod
#     - |
#       doc_count=$(yq -d'*' r output-${env}.yaml "kind" | wc -l);
#       count=0;
#       while [ $count -le $(($doc_count -1)) ]; do
#         kind=$(yq -d"$count" r output-${env}.yaml "kind");
#         if [ $kind == "Deployment" ]; then
#           rs_name=$(yq -d"$count" r output-${env}.yaml metadata.name);
#           kubectl rollout undo deploy/${rs_name};
#         elif [ $kind == "StatefulSet" ]; then
#           rs_name=$(yq -d"$count" r output-${env}.yaml metadata.name);
#           kubectl rollout undo sts/${rs_name};
#         fi;
#         count=$(( $count + 1 ));
#       done;
